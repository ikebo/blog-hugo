<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>git on Ike&#39;Log</title>
    <link>https://ikebo.cc/tags/git/</link>
    <description>Recent content in git on Ike&#39;Log</description>
    <image>
      <title>Ike&#39;Log</title>
      <url>https://ikebo.cc/papermod-cover.png</url>
      <link>https://ikebo.cc/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://ikebo.cc/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git 放弃本地修改</title>
      <link>https://ikebo.cc/post/migrate/part2/git-%E6%94%BE%E5%BC%83%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ikebo.cc/post/migrate/part2/git-%E6%94%BE%E5%BC%83%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9/</guid>
      <description>Look1:
git checkout . #本地所有修改的。没有的提交的，都返回到原来的状态 git stash #把所有没有提交的修改暂存到stash里面。可用git stash pop回复。 git reset --hard HASH #返回到某个节点，不保留修改。 git reset --soft HASH #返回到某个节点。保留修改 git reset HEAD^ #撤销上一次commit，回到没有add的状态 git clean -df #返回到某个节点 git clean 参数 -n 显示 将要 删除的 文件 和 目录 -f 删除 文件 -df 删除 文件 和 目录 也可以使用：
git checkout . &amp;amp;&amp;amp; git clean -xdf CSDN&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
    <item>
      <title>git 切换 tag</title>
      <link>https://ikebo.cc/post/migrate/part2/git-%E5%88%87%E6%8D%A2-tag/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ikebo.cc/post/migrate/part2/git-%E5%88%87%E6%8D%A2-tag/</guid>
      <description>有一种源码学习的方法是这样的：从最初的版本开始看，有的很大的开源项目最初可能就只有几百行。我们可以先把项目clone到本地，然后切换到最初般。
列出所有版本:
git tag 若一个tag都没有，则可能是因为你先fork了这个项目，然后本地再pull下来的，这种情况得先执行:
git fetch 然后，切换到指定版本：
git checkout tagname 切回到主分支：
git checkout master </description>
    </item>
    
  </channel>
</rss>
