<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>uwsgi on Ike&#39;Log</title>
    <link>https://ikebo.cc/tags/uwsgi/</link>
    <description>Recent content in uwsgi on Ike&#39;Log</description>
    <image>
      <title>Ike&#39;Log</title>
      <url>https://ikebo.cc/papermod-cover.png</url>
      <link>https://ikebo.cc/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://ikebo.cc/tags/uwsgi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WSGI的理解</title>
      <link>https://ikebo.cc/post/migrate/wsgi%E7%9A%84%E7%90%86%E8%A7%A3/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ikebo.cc/post/migrate/wsgi%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
      <description>WSGI(Web Server Gateway Interface)是描述Python应用和服务器之间标准接口的协议。若应用开发者和服务器开发者都实现这个协议，则双方都只需要专注自己所需要开发的功能，而不用考虑应用／服务器兼容的问题。
目前WSGI协议已经得到广泛实现, WSGI应用/框架有flask, django等，WSGI服务器有uWSGI(其实现的uwsgi协议是传输协议，主要用于与反向代理的通信), gunicorn等。
WSGI在PEP333中发布，主要内容为1：
WSGI application are callable python objects (functions or classes with a call method that are passed two arguments: a WSGI environment as first argument and a function that starts the response. the application has to start a response using the function provided and return an iterable &amp;gt; where each yielded item means writing and flushing. The WSGI environment is like a CGI environment just with some additional keys that are either provided by the server or a middleware.</description>
    </item>
    
  </channel>
</rss>
